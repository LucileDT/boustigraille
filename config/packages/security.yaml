security:
    enable_authenticator_manager: true

    providers:
        users:
            entity:
                class: App\Entity\User
                property: username

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users
            custom_authenticator:
               - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: home

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # allow unauthenticated users to access specific pages
        - { path: ^/login, roles: [PUBLIC_ACCESS] }
        - { path: '^/ingredient', roles: [PUBLIC_ACCESS] }
        - { path: ^/recipe, roles: [PUBLIC_ACCESS] }
        #  require authentication for all routes
        - { path: '^/', roles: [IS_AUTHENTICATED_FULLY] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
